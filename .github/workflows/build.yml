name: Build & Test

# Trigger the workflow on push or pull request
on:
  push:
    branches:
      - 'master'
    tags:
      - '*'
  pull_request:

env:
  OPERATOR_SDK_VERSION: v0.18.1
  KUBECONFIG: /tmp/kubeconfig
  IMAGE_NAME: quay.io/mittwald/harbor-operator
  REGISTRY_URL: quay.io/mittwald

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install golangci-lint
        run: curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh| sh -s -- -b $(go env GOPATH)/bin v1.28.3

      - name: Run golangci-lint
        run: $(go env GOPATH)/bin/golangci-lint run -v --timeout 30m

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

#      - name: Hack Code Climate and Go Modules
#        if: github.event_name != 'pull_request'
#        run: mkdir -p github.com/mittwald && ln -sf $(pwd) github.com/mittwald/harbor-operator
#
#      - name: Test & publish code coverage
#        if: github.event_name != 'pull_request'
#        uses: paambaati/codeclimate-action@v2.6.0
#        env:
#          CC_TEST_REPORTER_ID: ${{ secrets.codeClimateReporterID }}
#        with:
#          coverageCommand: go test -coverprofile=c.out ./...
#          debug: true
#          prefix: 'github.com/${{ github.repository }}/'

      - name: Go Test
        run: go test -coverprofile=c.out ./...

  build:
    name: Build Image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.14
        uses: actions/setup-go@v1
        with:
          go-version: 1.14
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Install operator-sdk
        run: sudo curl -L -o /usr/local/bin/operator-sdk "https://github.com/operator-framework/operator-sdk/releases/download/${OPERATOR_SDK_VERSION}/operator-sdk-${OPERATOR_SDK_VERSION}-x86_64-linux-gnu" && sudo chmod +x /usr/local/bin/operator-sdk

      - name: Build Image
        run: operator-sdk build "$IMAGE_NAME:latest" --go-build-args "-ldflags -X=version.Version=${GITHUB_SHA::8}"